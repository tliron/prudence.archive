<?xml version="1.0"?>
<project name="Prudence" default="build">

	<property file="prudence.properties" />

	<!-- Configuration -->

	<property name="lib" value="../libraries" />
	<property name="common" value="../common" />
	<property name="documentation" value="../documentation" />
	<property name="java" value="../java" />
	<property name="java-src" value="${java}/com.threecrickets.prudence/src" />
	<property name="python" value="../python" />
	<property name="ruby" value="../ruby" />
	<property name="groovy" value="../groovy" />
	<property name="clojure" value="../clojure" />
	<property name="javascript" value="../javascript" />
	<property name="php" value="../php" />
	<property name="velocity" value="../velocity" />

	<property name="tmp" value="./tmp" />
	<property name="dist-kitchensink" value="./kitchensink" />
	<property name="dist-standalone" value="./standalone" />
	<property name="dist-javascript" value="./javascript" />
	<property name="dist-python" value="./python" />
	<property name="dist-clojure" value="./clojure" />
	<property name="dist-groovy" value="./groovy" />
	<property name="dist-ruby" value="./ruby" />
	<property name="dist-php" value="./php" />
	
	<condition property="isUnix">
		<os family="unix" />
	</condition>
	<condition property="isWindows">
		<os family="windows" />
	</condition>

	<!-- Tasks -->

	<typedef resource="org/tigris/subversion/svnant/svnantlib.xml">
		<classpath>
			<fileset dir="${lib}/svnant/lib" includes="*.jar" />
		</classpath>
	</typedef>
	
	<!-- Macros -->

	<macrodef name="fetch-library">
		<attribute name="dist" />
		<attribute name="library" />
		<sequential>
			<copy todir="@{dist}/content/libraries">
				<fileset dir="${lib}/@{library}/lib" />
			</copy>
			<copy todir="@{dist}/content/licenses/@{library}">
				<fileset dir="${lib}/@{library}/license" />
			</copy>
		</sequential>
	</macrodef>

	<macrodef name="fetch-library-versions">
		<attribute name="dist" />
		<sequential>
			<copy todir="@{dist}/content/libraries" file="${lib}/versions.txt" />
		</sequential>
	</macrodef>

	<macrodef name="fetch-javadocs">
		<attribute name="dist" />
		<sequential>
			<copy todir="@{dist}/content/applications/prudence-test/web/static/api">
				<fileset dir="${tmp}/api" />
			</copy>
			<copy tofile="@{dist}/content/applications/prudence-test/web/static/manual/index.html" file="${documentation}/prudence_manual.html" />
		</sequential>
	</macrodef>

	<macrodef name="fetch-prudence-jar">
		<attribute name="dist" />
		<sequential>
			<copy todir="@{dist}/content/libraries" file="${tmp}/lib/com.threecrickets.prudence.jar" />
		</sequential>
	</macrodef>

	<macrodef name="fetch-prudence-test-jar">
		<attribute name="dist" />
		<sequential>
			<copy todir="@{dist}/content/libraries" file="${tmp}/lib/com.threecrickets.prudence.test.jar" />
		</sequential>
	</macrodef>

	<macrodef name="fetch-common-content">
		<attribute name="dist" />
		<attribute name="base" />
		<attribute name="bin-base" />
		<sequential>
			<copy todir="@{dist}/content">
				<fileset dir="${common}" excludes="bin/" />
				<fileset dir="@{base}" excludes="bin/" />
			</copy>
			<copy todir="@{dist}/content/bin">
				<fileset dir="@{bin-base}/bin" />
			</copy>
			<chmod file="@{dist}/content/bin/run.sh" perm="ugo+rx" />
			<copy todir="@{dist}/content/documentation">
				<fileset dir="${documentation}" excludes="*~,*.emergency" />
			</copy>
			<replace dir="@{dist}/content/defaults/instance" includes="default.*" token="%REVISION%" value="${revision.max}" />
			<copy todir="@{dist}/content/applications/prudence-test/web">
				<fileset dir="${velocity}/applications/prudence-test/web" />
			</copy>
			<!--<replace dir="@{dist}/content/applications/prudence-test/web/dynamic/" includes="download.html" token="%REVISION%" value="${revision.max}" />-->
		</sequential>
	</macrodef>

	<macrodef name="fetch-syntaxhighlighter">
		<attribute name="dist" />
		<attribute name="application" />
		<sequential>
			<copy todir="@{dist}/content/applications/@{application}/web/static/syntaxhighlighter">
				<fileset dir="${lib}/syntaxhighlighter/lib" />
			</copy>
		</sequential>
	</macrodef>

	<macrodef name="package">
		<attribute name="dist" />
		<attribute name="name" />
		<sequential>
			<zip destfile="prudence-@{name}-R${revision.max}.zip" level="9">
				<fileset dir="@{dist}/content" excludes="cache/, logs/, data/, libraries/com.caucho.quercus.jar" />
			</zip>
		</sequential>
	</macrodef>

	<macrodef name="test">
		<attribute name="dist" />
		<attribute name="name" />
		<sequential>
			<junit dir="." haltonfailure="true" fork="true" forkmode="perBatch" newenvironment="false" jvm="${test-jvm}">
				<test name="com.threecrickets.prudence.test.@{name}" />
				<classpath>
					<file file="${lib}/junit/lib/org.junit.jar" />
					<file file="${lib}/groboutils/lib/net.sourceforge.groboutils.jar" />
					<file file="${lib}/restlet/lib/org.restlet.jar" />
					<file file="${lib}/log4j/lib/org.apache.log4j.jar" />
					<file file="${tmp}/lib/com.threecrickets.prudence.test.jar" />
					<!-- These are used for in-process mode -->
					<fileset dir="@{dist}/content/libraries">
						<include name="*.jar" />
					</fileset>
				</classpath>
				<formatter type="plain" usefile="false" />
				<env key="PRUDENCE_TEST_IN_PROCESS" value="${isWindows}" />
				<env key="PRUDENCE_TEST_THREADS" value="${test-threads}" />
				<env key="PRUDENCE_TEST_ITERATIONS" value="${test-iterations}" />
				<env key="PRUDENCE_TEST_IS_WINDOWS" value="${isWindows}" />
				<!-- These are used for in-process mode -->
				<jvmarg value="-Dscripturian.cache=@{dist}/content/cache" />
				<jvmarg value="-Dpython.home=@{dist}/content/libraries/python" />
				<jvmarg value="-Dpython.verbose=warning" />
				<jvmarg value="-Djava.library.path=${jepp-path}" />
			</junit>
		</sequential>
	</macrodef>

	<!-- Basic -->

	<target name="build" depends="kitchensink, standalone, javascript, python, clojure, groovy, ruby, php" description="Build all distributions" />

	<target name="package" depends="package-kitchensink, package-standalone, package-javascript, package-python, package-clojure, package-groovy, package-ruby, package-php" description="Package all distributions" />

	<target name="test" depends="test-kitchensink, test-javascript, test-python, test-clojure, test-groovy, test-ruby, test-php" description="Test all distributions" />

	<target name="clean" description="Clean">
		<delete dir="${tmp}" />
		<delete dir="${dist-kitchensink}" />
		<delete dir="${dist-standalone}" />
		<delete dir="${dist-javascript}" />
		<delete dir="${dist-python}" />
		<delete dir="${dist-clojure}" />
		<delete dir="${dist-groovy}" />
		<delete dir="${dist-ruby}" />
		<delete dir="${dist-php}" />
		<delete>
			<fileset dir="." includes="*.zip" />
		</delete>
	</target>

	<target name="rebuild" depends="clean, build" description="Rebuild all distributions" />

	<!-- Essentials -->

	<target name="revision" unless="revision.max">
		<svn svnkit="true" javahl="false">
			<wcVersion path=".." />
		</svn>
		<echo>Revision ${revision.max}.</echo>
	</target>

	<target name="compile" description="Compile Prudence code">
		<mkdir dir="${tmp}/classes" />
		<javac srcdir="${java-src}" destdir="${tmp}/classes" target="1.5" debug="${debug}" includeAntRuntime="false">
			<classpath>
				<fileset dir="${lib}/commons-dbcp/lib" />
				<fileset dir="${lib}/commons-fileupload/lib" />
				<fileset dir="${lib}/commons-pool/lib" />
				<fileset dir="${lib}/cron4j/lib" />
				<fileset dir="${lib}/groboutils/lib" />
				<fileset dir="${lib}/hazelcast/lib" />
				<fileset dir="${lib}/h2/lib" />
				<fileset dir="${lib}/junit/lib" />
				<fileset dir="${lib}/jygments/lib" />
				<fileset dir="${lib}/restlet/lib" />
				<fileset dir="${lib}/scripturian/lib" />
				<fileset dir="${lib}/servlet/lib" />
				<fileset dir="${lib}/spymemcached/lib" />
			</classpath>
		</javac>
	</target>

	<target name="jar" depends="compile" description="Create Prudence jar">
		<mkdir dir="${tmp}/lib" />
		<jar destfile="${tmp}/lib/com.threecrickets.prudence.jar" basedir="${tmp}/classes" excludes="com/threecrickets/prudence/test/**" />
		<jar destfile="${tmp}/lib/com.threecrickets.prudence.test.jar" basedir="${tmp}/classes" includes="com/threecrickets/prudence/test/**" />
	</target>

	<target name="javadoc" description="Create Prudence API docs">
		<available file="${tmp}/api" property="javadoc-present" />
		<antcall target="javadoc-unless" />
	</target>

	<target name="javadoc-unless" description="Create Prudence API docs" unless="javadoc-present">
		<javadoc sourcepath="${java-src}" source="1.5" excludepackagenames="**.internal.*,**.test.*" destdir="${tmp}/api" stylesheetfile="${documentation}/soft-cricket-api.css" windowtitle="Prudence 1.0-${revision.max}" doctitle="Prudence 1.0-${revision.max}" access="protected" author="true" nodeprecated="false" nodeprecatedlist="false" noindex="false" nonavbar="false" notree="false" splitindex="true" use="true" version="true" verbose="true">
			<link href="http://java.sun.com/j2se/1.5.0/docs/api/" />
			<link href="http://java.sun.com/javase/6/docs/api/" />
			<link href="http://threecrickets.com/scripturian/api/" />
			<link href="http://www.restlet.org/documentation/2.0/jse/api/" />
			<link href="http://commons.apache.org/fileupload/apidocs/" />
			<link href="http://www.sauronsoftware.it/projects/cron4j/api/" />
			<classpath>
				<fileset dir="${lib}/restlet/lib" />
				<fileset dir="${lib}/jsr223/lib" />
				<fileset dir="${lib}/scripturian/lib" />
				<fileset dir="${lib}/jygments/lib" />
			</classpath>
			<bottom>
				<![CDATA[<i>Copyright &#169; 2009-2010 <a target="_top" href="http://threecrickets.com/">Three Crickets LLC</a>.</i>]]>
			</bottom>
		</javadoc>
	</target>
	
	<target name="documentation">
		<delete file="${documentation}/prudence_manual.pdf" />
		<delete file="${documentation}/prudence_manual.html" />
		<exec executable="lyx" failifexecutionfails="false">
			<arg value="--export" />
			<arg value="pdf" />
			<arg value="${documentation}/prudence_manual.lyx" />
		</exec>
		<exec executable="elyxer" failifexecutionfails="false">
			<arg value="--html" />
			<arg value="--title" />
			<arg value="Prudence Manual" />
			<arg value="${documentation}/prudence_manual.lyx" />
			<arg value="${documentation}/prudence_manual.html" />
		</exec>
	</target>
	
	<!-- JavaScript -->
	
	<target name="javascript" depends="libraries-javascript, content-javascript" description="Create distribution" />
	
	<target name="package-javascript" depends="javascript" description="Create distribution zip">
		<package dist="${dist-javascript}" name="javascript" />
	</target>
	
	<target name="jar-javascript" depends="jar" description="Fetch Prudence jar">
		<fetch-prudence-jar dist="${dist-javascript}" />
	</target>
	
	<target name="libraries-javascript" depends="jar-javascript" description="Fetch libraries">
		<fetch-library dist="${dist-javascript}" library="commons-codec" />
		<fetch-library dist="${dist-javascript}" library="commons-dbcp" />
		<fetch-library dist="${dist-javascript}" library="commons-fileupload" />
		<fetch-library dist="${dist-javascript}" library="commons-io" />
		<fetch-library dist="${dist-javascript}" library="commons-logging" />
		<fetch-library dist="${dist-javascript}" library="commons-pool" />
		<fetch-library dist="${dist-javascript}" library="cron4j" />
		<fetch-library dist="${dist-javascript}" library="grizzly" />
		<fetch-library dist="${dist-javascript}" library="h2" />
		<fetch-library dist="${dist-javascript}" library="hazelcast" />
		<fetch-library dist="${dist-javascript}" library="httpclient" />
		<fetch-library dist="${dist-javascript}" library="httpcore" />
		<fetch-library dist="${dist-javascript}" library="httpmime" />
		<fetch-library dist="${dist-javascript}" library="jackson" />
		<fetch-library dist="${dist-javascript}" library="jcip-annotations" />
		<fetch-library dist="${dist-javascript}" library="json" />
		<fetch-library dist="${dist-javascript}" library="jygments" />
		<fetch-library dist="${dist-javascript}" library="log4j" />
		<fetch-library dist="${dist-javascript}" library="mime4j" />
		<fetch-library dist="${dist-javascript}" library="mysqlconnector" />
		<fetch-library dist="${dist-javascript}" library="restlet" />
		<fetch-library dist="${dist-javascript}" library="rhino" />
		<fetch-library dist="${dist-javascript}" library="scripturian" />
		<fetch-library dist="${dist-javascript}" library="servlet" />
		<fetch-library dist="${dist-javascript}" library="slf4j" />
		<fetch-library dist="${dist-javascript}" library="spymemcached" />
		<fetch-library dist="${dist-javascript}" library="succinct" />
		<fetch-library dist="${dist-javascript}" library="velocity" />
		<fetch-library-versions dist="${dist-javascript}" />
	</target>
	
	<target name="javadoc-javascript" depends="javadoc" description="Fetch Prudence API docs">
		<fetch-javadocs dist="${dist-javascript}" />
	</target>
	
	<target name="content-javascript" depends="javadoc-javascript, revision" description="Fetch content">
		<fetch-common-content dist="${dist-javascript}" base="${javascript}" bin-base="${javascript}" />
		<!-- <fetch-syntaxhighlighter dist="${dist-javascript}" application="prudence-test" /> -->
	</target>
	
	<target name="test-javascript" depends="javascript" description="Unit tests">
		<test dist="${dist-javascript}" name="JavaScript" />
	</target>
	
	<!-- Python -->
	
	<target name="python" depends="libraries-python, content-python" description="Create distribution" />
	
	<target name="package-python" depends="python" description="Create distribution zip">
		<package dist="${dist-python}" name="python" />
	</target>
	
	<target name="jar-python" depends="jar" description="Fetch Prudence jar">
		<fetch-prudence-jar dist="${dist-python}" />
	</target>
	
	<target name="libraries-python" depends="jar-python" description="Fetch libraries">
		<fetch-library dist="${dist-python}" library="commons-codec" />
		<fetch-library dist="${dist-python}" library="commons-dbcp" />
		<fetch-library dist="${dist-python}" library="commons-fileupload" />
		<fetch-library dist="${dist-python}" library="commons-io" />
		<fetch-library dist="${dist-python}" library="commons-logging" />
		<fetch-library dist="${dist-python}" library="commons-pool" />
		<fetch-library dist="${dist-python}" library="cron4j" />
		<fetch-library dist="${dist-python}" library="grizzly" />
		<fetch-library dist="${dist-python}" library="h2" />
		<fetch-library dist="${dist-python}" library="hazelcast" />
		<fetch-library dist="${dist-python}" library="httpclient" />
		<fetch-library dist="${dist-python}" library="httpcore" />
		<fetch-library dist="${dist-python}" library="httpmime" />
		<fetch-library dist="${dist-python}" library="jackson" />
		<fetch-library dist="${dist-python}" library="jcip-annotations" />
		<fetch-library dist="${dist-python}" library="jepp" />
		<fetch-library dist="${dist-python}" library="json" />
		<fetch-library dist="${dist-python}" library="jsr223" />
		<fetch-library dist="${dist-python}" library="jygments" />
		<fetch-library dist="${dist-python}" library="jython" />
		<fetch-library dist="${dist-python}" library="log4j" />
		<fetch-library dist="${dist-python}" library="mime4j" />
		<fetch-library dist="${dist-python}" library="mysqlconnector" />
		<fetch-library dist="${dist-python}" library="restlet" />
		<fetch-library dist="${dist-python}" library="scripturian" />
		<fetch-library dist="${dist-python}" library="servlet" />
		<fetch-library dist="${dist-python}" library="slf4j" />
		<fetch-library dist="${dist-python}" library="spymemcached" />
		<fetch-library dist="${dist-python}" library="sqlalchemy" />
		<fetch-library dist="${dist-python}" library="succinct" />
		<fetch-library dist="${dist-python}" library="velocity" />
		<fetch-library-versions dist="${dist-python}" />
	</target>
	
	<target name="javadoc-python" depends="javadoc" description="Fetch Prudence API docs">
		<fetch-javadocs dist="${dist-python}" />
	</target>
	
	<target name="content-python" depends="javadoc-python, revision" description="Fetch content">
		<fetch-common-content dist="${dist-python}" base="${python}" bin-base="${python}" />
		<!-- <fetch-syntaxhighlighter dist="${dist-python}" application="prudence-test" />
			<fetch-syntaxhighlighter dist="${dist-python}" application="stickstick" /> -->
	</target>
	
	<target name="test-python" depends="python" description="Unit tests">
		<test dist="${dist-python}" name="Python" />
	</target>
	
	<!-- Clojure -->
	
	<target name="clojure" depends="libraries-clojure, content-clojure" description="Create distribution" />
	
	<target name="package-clojure" depends="clojure" description="Create distribution zip">
		<package dist="${dist-clojure}" name="clojure" />
	</target>
	
	<target name="jar-clojure" depends="jar" description="Fetch Prudence jar">
		<fetch-prudence-jar dist="${dist-clojure}" />
	</target>
	
	<target name="libraries-clojure" depends="jar-clojure" description="Fetch libraries">
		<fetch-library dist="${dist-clojure}" library="clojure" />
		<fetch-library dist="${dist-clojure}" library="commons-codec" />
		<fetch-library dist="${dist-clojure}" library="commons-dbcp" />
		<fetch-library dist="${dist-clojure}" library="commons-fileupload" />
		<fetch-library dist="${dist-clojure}" library="commons-io" />
		<fetch-library dist="${dist-clojure}" library="commons-logging" />
		<fetch-library dist="${dist-clojure}" library="commons-pool" />
		<fetch-library dist="${dist-clojure}" library="cron4j" />
		<fetch-library dist="${dist-clojure}" library="grizzly" />
		<fetch-library dist="${dist-clojure}" library="h2" />
		<fetch-library dist="${dist-clojure}" library="hazelcast" />
		<fetch-library dist="${dist-clojure}" library="httpclient" />
		<fetch-library dist="${dist-clojure}" library="httpcore" />
		<fetch-library dist="${dist-clojure}" library="httpmime" />
		<fetch-library dist="${dist-clojure}" library="jackson" />
		<fetch-library dist="${dist-clojure}" library="jcip-annotations" />
		<fetch-library dist="${dist-clojure}" library="json" />
		<fetch-library dist="${dist-clojure}" library="jygments" />
		<fetch-library dist="${dist-clojure}" library="log4j" />
		<fetch-library dist="${dist-clojure}" library="mime4j" />
		<fetch-library dist="${dist-clojure}" library="mysqlconnector" />
		<fetch-library dist="${dist-clojure}" library="restlet" />
		<fetch-library dist="${dist-clojure}" library="scripturian" />
		<fetch-library dist="${dist-clojure}" library="servlet" />
		<fetch-library dist="${dist-clojure}" library="slf4j" />
		<fetch-library dist="${dist-clojure}" library="spymemcached" />
		<fetch-library dist="${dist-clojure}" library="succinct" />
		<fetch-library dist="${dist-clojure}" library="velocity" />
		<fetch-library-versions dist="${dist-clojure}" />
	</target>
	
	<target name="javadoc-clojure" depends="javadoc" description="Fetch Prudence API docs">
		<fetch-javadocs dist="${dist-clojure}" />
	</target>
	
	<target name="content-clojure" depends="javadoc-clojure, revision" description="Fetch content">
		<fetch-common-content dist="${dist-clojure}" base="${clojure}" bin-base="${clojure}" />
		<!-- <fetch-syntaxhighlighter dist="${dist-clojure}" application="prudence-test" />
			<fetch-syntaxhighlighter dist="${dist-clojure}" application="stickstick" /> -->
	</target>
	
	<target name="test-clojure" depends="clojure" description="Unit tests">
		<test dist="${dist-clojure}" name="Clojure" />
	</target>
	
	<!-- Groovy -->
	
	<target name="groovy" depends="libraries-groovy, content-groovy" description="Create distribution" />
	
	<target name="package-groovy" depends="groovy" description="Create distribution zip">
		<package dist="${dist-groovy}" name="groovy" />
	</target>
	
	<target name="jar-groovy" depends="jar" description="Fetch Prudence jar">
		<fetch-prudence-jar dist="${dist-groovy}" />
	</target>
	
	<target name="libraries-groovy" depends="jar-groovy" description="Fetch libraries">
		<fetch-library dist="${dist-groovy}" library="commons-codec" />
		<fetch-library dist="${dist-groovy}" library="commons-dbcp" />
		<fetch-library dist="${dist-groovy}" library="commons-fileupload" />
		<fetch-library dist="${dist-groovy}" library="commons-io" />
		<fetch-library dist="${dist-groovy}" library="commons-logging" />
		<fetch-library dist="${dist-groovy}" library="commons-pool" />
		<fetch-library dist="${dist-groovy}" library="cron4j" />
		<fetch-library dist="${dist-groovy}" library="grizzly" />
		<fetch-library dist="${dist-groovy}" library="groovy" />
		<fetch-library dist="${dist-groovy}" library="h2" />
		<fetch-library dist="${dist-groovy}" library="hazelcast" />
		<fetch-library dist="${dist-groovy}" library="httpclient" />
		<fetch-library dist="${dist-groovy}" library="httpcore" />
		<fetch-library dist="${dist-groovy}" library="httpmime" />
		<fetch-library dist="${dist-groovy}" library="jackson" />
		<fetch-library dist="${dist-groovy}" library="jcip-annotations" />
		<fetch-library dist="${dist-groovy}" library="json" />
		<fetch-library dist="${dist-groovy}" library="jygments" />
		<fetch-library dist="${dist-groovy}" library="log4j" />
		<fetch-library dist="${dist-groovy}" library="mime4j" />
		<fetch-library dist="${dist-groovy}" library="mysqlconnector" />
		<fetch-library dist="${dist-groovy}" library="restlet" />
		<fetch-library dist="${dist-groovy}" library="scripturian" />
		<fetch-library dist="${dist-groovy}" library="servlet" />
		<fetch-library dist="${dist-groovy}" library="slf4j" />
		<fetch-library dist="${dist-groovy}" library="spymemcached" />
		<fetch-library dist="${dist-groovy}" library="succinct" />
		<fetch-library dist="${dist-groovy}" library="velocity" />
		<fetch-library-versions dist="${dist-groovy}" />
	</target>
	
	<target name="javadoc-groovy" depends="javadoc" description="Fetch Prudence API docs">
		<fetch-javadocs dist="${dist-groovy}" />
	</target>
	
	<target name="content-groovy" depends="javadoc-groovy, revision" description="Fetch content">
		<fetch-common-content dist="${dist-groovy}" base="${groovy}" bin-base="${groovy}" />
		<!-- <fetch-syntaxhighlighter dist="${dist-groovy}" application="prudence-test" />
			<fetch-syntaxhighlighter dist="${dist-groovy}" application="stickstick" /> -->
	</target>
	
	<target name="test-groovy" depends="groovy" description="Unit tests">
		<test dist="${dist-groovy}" name="Groovy" />
	</target>
	
	<!-- Ruby -->
	
	<target name="ruby" depends="libraries-ruby, content-ruby" description="Create distribution" />
	
	<target name="package-ruby" depends="ruby" description="Create distribution zip">
		<package dist="${dist-ruby}" name="ruby" />
	</target>
	
	<target name="jar-ruby" depends="jar" description="Fetch Prudence jar">
		<fetch-prudence-jar dist="${dist-ruby}" />
	</target>
	
	<target name="libraries-ruby" depends="jar-ruby" description="Fetch libraries">
		<fetch-library dist="${dist-ruby}" library="commons-codec" />
		<fetch-library dist="${dist-ruby}" library="commons-dbcp" />
		<fetch-library dist="${dist-ruby}" library="commons-fileupload" />
		<fetch-library dist="${dist-ruby}" library="commons-io" />
		<fetch-library dist="${dist-ruby}" library="commons-logging" />
		<fetch-library dist="${dist-ruby}" library="commons-pool" />
		<fetch-library dist="${dist-ruby}" library="cron4j" />
		<fetch-library dist="${dist-ruby}" library="grizzly" />
		<fetch-library dist="${dist-ruby}" library="h2" />
		<fetch-library dist="${dist-ruby}" library="hazelcast" />
		<fetch-library dist="${dist-ruby}" library="httpclient" />
		<fetch-library dist="${dist-ruby}" library="httpcore" />
		<fetch-library dist="${dist-ruby}" library="httpmime" />
		<fetch-library dist="${dist-ruby}" library="jackson" />
		<fetch-library dist="${dist-ruby}" library="jcip-annotations" />
		<fetch-library dist="${dist-ruby}" library="jruby" />
		<fetch-library dist="${dist-ruby}" library="json" />
		<fetch-library dist="${dist-ruby}" library="jygments" />
		<fetch-library dist="${dist-ruby}" library="log4j" />
		<fetch-library dist="${dist-ruby}" library="mime4j" />
		<fetch-library dist="${dist-ruby}" library="mysqlconnector" />
		<fetch-library dist="${dist-ruby}" library="restlet" />
		<fetch-library dist="${dist-ruby}" library="scripturian" />
		<fetch-library dist="${dist-ruby}" library="servlet" />
		<fetch-library dist="${dist-ruby}" library="slf4j" />
		<fetch-library dist="${dist-ruby}" library="spymemcached" />
		<fetch-library dist="${dist-ruby}" library="succinct" />
		<fetch-library dist="${dist-ruby}" library="velocity" />
		<fetch-library-versions dist="${dist-ruby}" />
	</target>
	
	<target name="javadoc-ruby" depends="javadoc" description="Fetch Prudence API docs">
		<fetch-javadocs dist="${dist-ruby}" />
	</target>
	
	<target name="content-ruby" depends="javadoc-ruby, revision" description="Fetch content">
		<fetch-common-content dist="${dist-ruby}" base="${ruby}" bin-base="${ruby}" />
		<!-- <fetch-syntaxhighlighter dist="${dist-ruby}" application="prudence-test" />
			<fetch-syntaxhighlighter dist="${dist-ruby}" application="stickstick" /> -->
	</target>
	
	<target name="test-ruby" depends="ruby" description="Unit tests">
		<test dist="${dist-ruby}" name="Ruby" />
	</target>
	
	<!-- PHP -->
	
	<target name="php" depends="libraries-php, content-php" description="Create distribution" />
	
	<target name="package-php" depends="php" description="Create distribution zip">
		<package dist="${dist-php}" name="php" />
	</target>
	
	<target name="jar-php" depends="jar" description="Fetch Prudence jar">
		<fetch-prudence-jar dist="${dist-php}" />
	</target>
	
	<target name="libraries-php-quercus" description="Fetch libraries" if="quercus">
		<fetch-library dist="${dist-php}" library="quercus" />
	</target>
	
	<target name="libraries-php" depends="jar-php, libraries-php-quercus" description="Fetch libraries">
		<fetch-library dist="${dist-php}" library="commons-codec" />
		<fetch-library dist="${dist-php}" library="commons-dbcp" />
		<fetch-library dist="${dist-php}" library="commons-fileupload" />
		<fetch-library dist="${dist-php}" library="commons-io" />
		<fetch-library dist="${dist-php}" library="commons-logging" />
		<fetch-library dist="${dist-php}" library="commons-pool" />
		<fetch-library dist="${dist-php}" library="cron4j" />
		<fetch-library dist="${dist-php}" library="grizzly" />
		<fetch-library dist="${dist-php}" library="h2" />
		<fetch-library dist="${dist-php}" library="hazelcast" />
		<fetch-library dist="${dist-php}" library="httpclient" />
		<fetch-library dist="${dist-php}" library="httpcore" />
		<fetch-library dist="${dist-php}" library="httpmime" />
		<fetch-library dist="${dist-php}" library="jackson" />
		<fetch-library dist="${dist-php}" library="jcip-annotations" />
		<fetch-library dist="${dist-php}" library="json" />
		<fetch-library dist="${dist-php}" library="jygments" />
		<fetch-library dist="${dist-php}" library="log4j" />
		<fetch-library dist="${dist-php}" library="mime4j" />
		<fetch-library dist="${dist-php}" library="mysqlconnector" />
		<fetch-library dist="${dist-php}" library="restlet" />
		<fetch-library dist="${dist-php}" library="scripturian" />
		<fetch-library dist="${dist-php}" library="servlet" />
		<fetch-library dist="${dist-php}" library="slf4j" />
		<fetch-library dist="${dist-php}" library="spymemcached" />
		<fetch-library dist="${dist-php}" library="succinct" />
		<fetch-library dist="${dist-php}" library="velocity" />
		<fetch-library-versions dist="${dist-php}" />
	</target>
	
	<target name="javadoc-php" depends="javadoc" description="Fetch Prudence API docs">
		<fetch-javadocs dist="${dist-php}" />
	</target>
	
	<target name="content-php" depends="javadoc-php, revision" description="Fetch content">
		<fetch-common-content dist="${dist-php}" base="${php}" bin-base="${php}" />
		<!-- <fetch-syntaxhighlighter dist="${dist-php}" application="prudence-test" />
			<fetch-syntaxhighlighter dist="${dist-php}" application="stickstick" /> -->
	</target>
	
	<target name="test-php" depends="php" description="Unit tests">
		<test dist="${dist-php}" name="PHP" />
	</target>

	<!-- Kitchensink -->
	
	<target name="kitchensink" depends="libraries-kitchensink, content-kitchensink" description="Create distribution" />
	
	<target name="clean-kitchensink" description="Clean distribution">
		<delete dir="${dist-kitchensink}" />
	</target>
	
	<target name="package-kitchensink" depends="kitchensink" description="Create distribution zip">
		<package dist="${dist-kitchensink}" name="kitchensink" />
	</target>
	
	<target name="jar-kitchensink" depends="jar" description="Fetch Prudence jar">
		<fetch-prudence-jar dist="${dist-kitchensink}" />
		<fetch-prudence-test-jar dist="${dist-kitchensink}" />
	</target>
	
	<target name="javadoc-kitchensink" depends="javadoc" description="Fetch Prudence API docs">
		<fetch-javadocs dist="${dist-kitchensink}" />
	</target>
	
	<target name="libraries-kitchensink-quercus" description="Fetch libraries" if="quercus">
		<fetch-library dist="${dist-kitchensink}" library="quercus" />
	</target>
	
	<target name="libraries-kitchensink" depends="jar-kitchensink, libraries-kitchensink-quercus" description="Fetch libraries">
		<fetch-library dist="${dist-kitchensink}" library="clojure" />
		<fetch-library dist="${dist-kitchensink}" library="commons-codec" />
		<fetch-library dist="${dist-kitchensink}" library="commons-dbcp" />
		<fetch-library dist="${dist-kitchensink}" library="commons-fileupload" />
		<fetch-library dist="${dist-kitchensink}" library="commons-io" />
		<fetch-library dist="${dist-kitchensink}" library="commons-logging" />
		<fetch-library dist="${dist-kitchensink}" library="commons-pool" />
		<fetch-library dist="${dist-kitchensink}" library="cron4j" />
		<fetch-library dist="${dist-kitchensink}" library="grizzly" />
		<fetch-library dist="${dist-kitchensink}" library="groboutils" />
		<fetch-library dist="${dist-kitchensink}" library="groovy" />
		<fetch-library dist="${dist-kitchensink}" library="h2" />
		<fetch-library dist="${dist-kitchensink}" library="hazelcast" />
		<fetch-library dist="${dist-kitchensink}" library="httpclient" />
		<fetch-library dist="${dist-kitchensink}" library="httpcore" />
		<fetch-library dist="${dist-kitchensink}" library="httpmime" />
		<fetch-library dist="${dist-kitchensink}" library="jackson" />
		<fetch-library dist="${dist-kitchensink}" library="jcip-annotations" />
		<fetch-library dist="${dist-kitchensink}" library="jepp" />
		<fetch-library dist="${dist-kitchensink}" library="jruby" />
		<fetch-library dist="${dist-kitchensink}" library="json" />
		<fetch-library dist="${dist-kitchensink}" library="jsr223" />
		<fetch-library dist="${dist-kitchensink}" library="junit" />
		<fetch-library dist="${dist-kitchensink}" library="jygments" />
		<fetch-library dist="${dist-kitchensink}" library="jython" />
		<fetch-library dist="${dist-kitchensink}" library="log4j" />
		<fetch-library dist="${dist-kitchensink}" library="mime4j" />
		<fetch-library dist="${dist-kitchensink}" library="mysqlconnector" />
		<fetch-library dist="${dist-kitchensink}" library="restlet" />
		<fetch-library dist="${dist-kitchensink}" library="rhino" />
		<fetch-library dist="${dist-kitchensink}" library="scripturian" />
		<fetch-library dist="${dist-kitchensink}" library="servlet" />
		<fetch-library dist="${dist-kitchensink}" library="slf4j" />
		<fetch-library dist="${dist-kitchensink}" library="spymemcached" />
		<fetch-library dist="${dist-kitchensink}" library="sqlalchemy" />
		<fetch-library dist="${dist-kitchensink}" library="succinct" />
		<fetch-library dist="${dist-kitchensink}" library="velocity" />
		<fetch-library-versions dist="${dist-kitchensink}" />
	</target>
	
	<target name="content-kitchensink" depends="javadoc-kitchensink, revision" description="Fetch content">
		<echo>Using ${kitchensink-base} as base for Kitchen Sink distribution.</echo>
		<!-- Fetch Prudence Tests -->
		<copy todir="${dist-kitchensink}/content/applications/prudence-test/web">
			<fileset dir="${python}/applications/prudence-test/web" excludes="**/velocity-helper.html" />
			<fileset dir="${ruby}/applications/prudence-test/web" excludes="**/velocity-helper.html" />
			<fileset dir="${groovy}/applications/prudence-test/web" excludes="**/velocity-helper.html" />
			<fileset dir="${clojure}/applications/prudence-test/web" excludes="**/velocity-helper.html" />
			<fileset dir="${javascript}/applications/prudence-test/web" excludes="**/velocity-helper.html" />
			<fileset dir="${php}/applications/prudence-test/web" excludes="**/velocity-helper.html" />
			<fileset dir="${velocity}/applications/prudence-test/web" />
		</copy>
		<copy todir="${dist-kitchensink}/content/applications/prudence-test/resources">
			<fileset dir="${python}/applications/prudence-test/resources" />
			<fileset dir="${ruby}/applications/prudence-test/resources" />
			<fileset dir="${groovy}/applications/prudence-test/resources" />
			<fileset dir="${clojure}/applications/prudence-test/resources" />
			<fileset dir="${javascript}/applications/prudence-test/resources" />
			<fileset dir="${php}/applications/prudence-test/resources" />
		</copy>
		<copy todir="${dist-kitchensink}/content/applications/prudence-test/libraries">
			<fileset dir="${python}/applications/prudence-test/libraries" />
			<fileset dir="${ruby}/applications/prudence-test/libraries" />
			<fileset dir="${groovy}/applications/prudence-test/libraries" />
			<fileset dir="${clojure}/applications/prudence-test/libraries" />
			<fileset dir="${javascript}/applications/prudence-test/libraries" />
			<fileset dir="${php}/applications/prudence-test/libraries" />
		</copy>
		<fetch-common-content dist="${dist-kitchensink}" base="${kitchensink-base}" bin-base="${common}" />
		<!-- <fetch-syntaxhighlighter dist="${dist-kitchensink}" application="prudence-test" /> -->
		<!-- Fetch other applications -->
		<!--<copy todir="${dist-kitchensink}/content/applications/stickstick">
				<fileset dir="${python}/applications/stickstick" excludes="*" />
			</copy>-->
		<!-- <fetch-syntaxhighlighter dist="${dist-kitchensink}" application="stickstick" /> -->
	</target>
	
	<target name="test-kitchensink" depends="kitchensink" description="Unit tests">
		<test dist="${dist-kitchensink}" name="KitchenSink" />
	</target>
	
	<!-- Standalone -->
	
	<target name="standalone" depends="src-standalone, jar-standalone, content-standalone" description="Create distribution" />
	
	<target name="package-standalone" depends="standalone" description="Create distribution zip">
		<package dist="${dist-standalone}" name="standalone" />
	</target>
	
	<target name="jar-standalone" depends="jar" description="Fetch Prudence jar">
		<fetch-prudence-jar dist="${dist-standalone}" />
	</target>
	
	<target name="src-standalone" description="Fetch Prudence source">
		<copy todir="${dist-standalone}/content/src">
			<fileset dir="${java-src}" />
		</copy>
	</target>
	
	<target name="javadoc-standalone" depends="javadoc" description="Fetch Prudence API docs">
		<copy todir="${dist-standalone}/content/api">
			<fileset dir="${tmp}/api" />
		</copy>
	</target>
	
	<target name="content-standalone" depends="javadoc-standalone" description="Fetch content">
		<copy todir="${dist-standalone}/content">
			<fileset dir="${common}" excludes="log/, configuration/, applications/, bin/" />
		</copy>
	</target>

</project>
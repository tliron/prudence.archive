<% script.cacheDuration = 5000; var prudenceDemoBasePath = script.meta.get('prudenceDemoBasePath'); %><%& prudenceDemoBasePath + 'header.fragment' %>

<h2>Supported Scripting Language: Python</h2>
<p>
Python presents a unique challenge in a scriptlet environment, due to its reliance on significant whitespace. However, because HTML is loose with
whitespace, it's possible to force the whole file to adhere to Python's scheme. In fact, as many Python enthusiasts would argue, forcing your code
to adhere to Python's whitespace requirements can go a long way towards making it more readable and manageable.
</p><p>
Otherwise, Python is far richer
in features than <a href="php.page">PHP</a> and <a href="javascript.page">JavaScript</a>, and can compete well with PHP for the quality and maturity of its libraries.
</p>

<h3>Implementation Notes</h3>
<p>
Two implementations exist for Python: <a href="http://www.jython.org/">Jython</a> and <a href="http://jepp.sourceforge.net/">Jepp</a>.
The former is 100% Java, while the latter uses a Java bridge to a natively compiled CPython of your choice, and is generally more complicated to install.
</p><p>
Jython requires a small library for
<a href="http://java.sun.com/developer/technicalArticles/J2SE/Desktop/scripting/">Java scripting standard (JSR-223)</a>, which is available 
at the <a href="https://scripting.dev.java.net/">Java scripting project</a>. (This was true for version 2.2.1.)
See the <a href="requirements.page">requirement notes</a> if you are using Java 5.
</p><p>
<i>Important!</i> At this time (version 2.3), Jepp cannot be used for creating REST resources, due to its very limited implementation of the
Java scripting standard. It is OK for scriptlets, though. Also note that Jepp requires Java 5, and will not work on Java 5.
</p>

<%& prudenceDemoBasePath + 'footer.fragment' %>
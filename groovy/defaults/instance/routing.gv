//
// Prudence Routing
//

import java.io.File
import com.threecrickets.prudence.util.IoUtil

// Hosts

executeOrDefault('instance/hosts/')

// Applications

applications = []
componentInstance.context.attributes['com.threecrickets.prudence.applications'] = applications
applicationsDir = new File(document.source.basePath, 'applications')

propertiesFile = new File(applicationsDir, 'applications.properties')
properties = IoUtil.loadProperties(propertiesFile)
saveProperties = false
applicationFiles = applicationsDir.listFiles()
for(applicationFile in applicationFiles) {
	lastModified = applicationFile.lastModified().toString()
	if(!applicationFile.directory && applicationFile.name.endsWith('.zip') && properties.getProperty(applicationFile.name, '') != lastModified) {
		println('Unpacking "' + applicationFile.name + '"...')
		IoUtil.unzip(applicationFile, applicationsDir)
		properties.setProperty(applicationFile.name, lastModified)
		saveProperties = true
	}
}
if(saveProperties) {
	IoUtil.saveProperties(properties, propertiesFile)
}

applicationDirs = applicationsDir.listFiles()
for(applicationDir in applicationDirs) {
	if(applicationDir.directory) {
		applicationName = applicationDir.name
		applicationInternalName = applicationDir.name
		applicationLoggerName = applicationDir.name
		applicationBasePath = applicationDir.path
		applicationDefaultURL = '/' + applicationDir.name + '/'
		applicationBase = 'applications/' + applicationDir.name + '/'
		executeOrDefault(applicationBase, 'defaults/application/')
		applications.add(applicationInstance)
	}
}

if(applications.size() == 0) {
	println('No applications found. Exiting.')
	out.flush()
	System.exit(0)
}

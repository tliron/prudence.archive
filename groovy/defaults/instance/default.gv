//
// Prudence Component
//

import java.lang.System
import java.io.FileNotFoundException
import java.util.logging.LogManager

executeOrDefault = { name, deflt = null ->
	try {
		document.execute(name)
	} catch(FileNotFoundException) {
		if(!deflt) {
			deflt = 'defaults/' + name
		}
		document.execute(deflt)
	}
}

tasks = []

//
// Version
//

prudenceVersion = '1.0'
prudenceRevision = '-%REVISION%'
if(prudenceRevision.size() == 1) {
	prudenceRevision = ''
}
prudenceFlavor = 'Groovy'

//
// Welcome
//

println('Prudence ' + prudenceVersion + prudenceRevision + ' for ' + prudenceFlavor + '.')

//
// Logging
//

// log4j: This is our actual logging engine
import org.apache.log4j.PropertyConfigurator
try {
	PropertyConfigurator.configure('configuration/logging.conf')
} catch(x) {}

// JULI: Remove any pre-existing configuration
LogManager.logManager.reset()

// JULI: Bridge to SLF4J, which will use log4j as its engine 
import org.slf4j.bridge.SLF4JBridgeHandler
try {
	SLF4JBridgeHandler.install()
} catch(x) {}

// Set Restlet to use SLF4J, which will use log4j as its engine
System.setProperty('org.restlet.engine.loggerFacadeClass', 'org.restlet.ext.slf4j.Slf4jLoggerFacade')

// Velocity logging
System.setProperty('com.sun.script.velocity.properties', 'configuration/velocity.conf')

//
// Component
//

executeOrDefault('instance/component/')

//
// Clients
//

executeOrDefault('instance/clients/')

//
// Routing
//

executeOrDefault('instance/routing/')

//
// Servers
//

executeOrDefault('instance/servers/')

//
// Start
//

component.start()

//
// Tasks
//

if(tasks.size() > 0) {
	futures = []
	startTime = System.currentTimeMillis()
	println('Executing ' + tasks.size() + ' tasks...')
	for(task in tasks) {
		futures.add(executor.submit(task))
	}
	for(future in futures) {
		future.get()
	}
	print('Finished tasks in ' + ((System.currentTimeMillis() - startTime) / 1000) + ' seconds.\n')
}
